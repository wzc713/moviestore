//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("Movies_DataModel", "FK__Messages__MovID__060DEAE8", "Movies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MovieStoreProject.Movies), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieStoreProject.Messages), true)]
[assembly: EdmRelationshipAttribute("Movies_DataModel", "FK__Messages__UserID__07020F21", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MovieStoreProject.Users), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieStoreProject.Messages), true)]
[assembly: EdmRelationshipAttribute("Movies_DataModel", "FK__Users__RoleID__79A81403", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MovieStoreProject.Roles), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MovieStoreProject.Users), true)]

#endregion

namespace MovieStoreProject
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class Movies_DataEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“Movies_DataEntities”部分中的连接字符串初始化新 Movies_DataEntities 对象。
        /// </summary>
        public Movies_DataEntities() : base("name=Movies_DataEntities", "Movies_DataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Movies_DataEntities 对象。
        /// </summary>
        public Movies_DataEntities(string connectionString) : base(connectionString, "Movies_DataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Movies_DataEntities 对象。
        /// </summary>
        public Movies_DataEntities(EntityConnection connection) : base(connection, "Movies_DataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Categories> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Categories>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Categories> _Categories;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<dtproperties> dtproperties
        {
            get
            {
                if ((_dtproperties == null))
                {
                    _dtproperties = base.CreateObjectSet<dtproperties>("dtproperties");
                }
                return _dtproperties;
            }
        }
        private ObjectSet<dtproperties> _dtproperties;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Managers> Managers
        {
            get
            {
                if ((_Managers == null))
                {
                    _Managers = base.CreateObjectSet<Managers>("Managers");
                }
                return _Managers;
            }
        }
        private ObjectSet<Managers> _Managers;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Messages> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Messages>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Messages> _Messages;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Movies> Movies
        {
            get
            {
                if ((_Movies == null))
                {
                    _Movies = base.CreateObjectSet<Movies>("Movies");
                }
                return _Movies;
            }
        }
        private ObjectSet<Movies> _Movies;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Roles> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Roles>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Roles> _Roles;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Categories EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCategories(Categories categories)
        {
            base.AddObject("Categories", categories);
        }
    
        /// <summary>
        /// 用于向 dtproperties EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTodtproperties(dtproperties dtproperties)
        {
            base.AddObject("dtproperties", dtproperties);
        }
    
        /// <summary>
        /// 用于向 Managers EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToManagers(Managers managers)
        {
            base.AddObject("Managers", managers);
        }
    
        /// <summary>
        /// 用于向 Messages EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMessages(Messages messages)
        {
            base.AddObject("Messages", messages);
        }
    
        /// <summary>
        /// 用于向 Movies EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMovies(Movies movies)
        {
            base.AddObject("Movies", movies);
        }
    
        /// <summary>
        /// 用于向 Roles EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRoles(Roles roles)
        {
            base.AddObject("Roles", roles);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Movies_DataModel", Name="Categories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categories : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Categories 对象。
        /// </summary>
        /// <param name="catID">CatID 属性的初始值。</param>
        /// <param name="catName">CatName 属性的初始值。</param>
        public static Categories CreateCategories(global::System.Int32 catID, global::System.String catName)
        {
            Categories categories = new Categories();
            categories.CatID = catID;
            categories.CatName = catName;
            return categories;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CatID
        {
            get
            {
                return _CatID;
            }
            set
            {
                if (_CatID != value)
                {
                    OnCatIDChanging(value);
                    ReportPropertyChanging("CatID");
                    _CatID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CatID");
                    OnCatIDChanged();
                }
            }
        }
        private global::System.Int32 _CatID;
        partial void OnCatIDChanging(global::System.Int32 value);
        partial void OnCatIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CatName
        {
            get
            {
                return _CatName;
            }
            set
            {
                OnCatNameChanging(value);
                ReportPropertyChanging("CatName");
                _CatName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CatName");
                OnCatNameChanged();
            }
        }
        private global::System.String _CatName;
        partial void OnCatNameChanging(global::System.String value);
        partial void OnCatNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Movies_DataModel", Name="dtproperties")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dtproperties : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 dtproperties 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="property">property 属性的初始值。</param>
        /// <param name="version">version 属性的初始值。</param>
        public static dtproperties Createdtproperties(global::System.Int32 id, global::System.String property, global::System.Int32 version)
        {
            dtproperties dtproperties = new dtproperties();
            dtproperties.id = id;
            dtproperties.property = property;
            dtproperties.version = version;
            return dtproperties;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> objectid
        {
            get
            {
                return _objectid;
            }
            set
            {
                OnobjectidChanging(value);
                ReportPropertyChanging("objectid");
                _objectid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("objectid");
                OnobjectidChanged();
            }
        }
        private Nullable<global::System.Int32> _objectid;
        partial void OnobjectidChanging(Nullable<global::System.Int32> value);
        partial void OnobjectidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String property
        {
            get
            {
                return _property;
            }
            set
            {
                if (_property != value)
                {
                    OnpropertyChanging(value);
                    ReportPropertyChanging("property");
                    _property = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("property");
                    OnpropertyChanged();
                }
            }
        }
        private global::System.String _property;
        partial void OnpropertyChanging(global::System.String value);
        partial void OnpropertyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String uvalue
        {
            get
            {
                return _uvalue;
            }
            set
            {
                OnuvalueChanging(value);
                ReportPropertyChanging("uvalue");
                _uvalue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("uvalue");
                OnuvalueChanged();
            }
        }
        private global::System.String _uvalue;
        partial void OnuvalueChanging(global::System.String value);
        partial void OnuvalueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] lvalue
        {
            get
            {
                return StructuralObject.GetValidValue(_lvalue);
            }
            set
            {
                OnlvalueChanging(value);
                ReportPropertyChanging("lvalue");
                _lvalue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lvalue");
                OnlvalueChanged();
            }
        }
        private global::System.Byte[] _lvalue;
        partial void OnlvalueChanging(global::System.Byte[] value);
        partial void OnlvalueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private global::System.Int32 _version;
        partial void OnversionChanging(global::System.Int32 value);
        partial void OnversionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Movies_DataModel", Name="Managers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Managers : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Managers 对象。
        /// </summary>
        /// <param name="managerID">ManagerID 属性的初始值。</param>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="managerName">ManagerName 属性的初始值。</param>
        /// <param name="pwd">Pwd 属性的初始值。</param>
        /// <param name="address">Address 属性的初始值。</param>
        /// <param name="sex">Sex 属性的初始值。</param>
        /// <param name="age">Age 属性的初始值。</param>
        /// <param name="phone">Phone 属性的初始值。</param>
        /// <param name="email">Email 属性的初始值。</param>
        public static Managers CreateManagers(global::System.Int32 managerID, global::System.Int32 roleID, global::System.String managerName, global::System.String pwd, global::System.String address, global::System.String sex, global::System.Int32 age, global::System.String phone, global::System.String email)
        {
            Managers managers = new Managers();
            managers.ManagerID = managerID;
            managers.RoleID = roleID;
            managers.ManagerName = managerName;
            managers.Pwd = pwd;
            managers.Address = address;
            managers.Sex = sex;
            managers.Age = age;
            managers.Phone = phone;
            managers.Email = email;
            return managers;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagerID
        {
            get
            {
                return _ManagerID;
            }
            set
            {
                if (_ManagerID != value)
                {
                    OnManagerIDChanging(value);
                    ReportPropertyChanging("ManagerID");
                    _ManagerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ManagerID");
                    OnManagerIDChanged();
                }
            }
        }
        private global::System.Int32 _ManagerID;
        partial void OnManagerIDChanging(global::System.Int32 value);
        partial void OnManagerIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagerName
        {
            get
            {
                return _ManagerName;
            }
            set
            {
                OnManagerNameChanging(value);
                ReportPropertyChanging("ManagerName");
                _ManagerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ManagerName");
                OnManagerNameChanged();
            }
        }
        private global::System.String _ManagerName;
        partial void OnManagerNameChanging(global::System.String value);
        partial void OnManagerNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pwd
        {
            get
            {
                return _Pwd;
            }
            set
            {
                OnPwdChanging(value);
                ReportPropertyChanging("Pwd");
                _Pwd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pwd");
                OnPwdChanged();
            }
        }
        private global::System.String _Pwd;
        partial void OnPwdChanging(global::System.String value);
        partial void OnPwdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.Int32 _Age;
        partial void OnAgeChanging(global::System.Int32 value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Movies_DataModel", Name="Messages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Messages : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Messages 对象。
        /// </summary>
        /// <param name="msgID">MsgID 属性的初始值。</param>
        /// <param name="msgcontent">Msgcontent 属性的初始值。</param>
        /// <param name="addDate">AddDate 属性的初始值。</param>
        public static Messages CreateMessages(global::System.Int32 msgID, global::System.String msgcontent, global::System.DateTime addDate)
        {
            Messages messages = new Messages();
            messages.MsgID = msgID;
            messages.Msgcontent = msgcontent;
            messages.AddDate = addDate;
            return messages;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MsgID
        {
            get
            {
                return _MsgID;
            }
            set
            {
                if (_MsgID != value)
                {
                    OnMsgIDChanging(value);
                    ReportPropertyChanging("MsgID");
                    _MsgID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MsgID");
                    OnMsgIDChanged();
                }
            }
        }
        private global::System.Int32 _MsgID;
        partial void OnMsgIDChanging(global::System.Int32 value);
        partial void OnMsgIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MovID
        {
            get
            {
                return _MovID;
            }
            set
            {
                OnMovIDChanging(value);
                ReportPropertyChanging("MovID");
                _MovID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovID");
                OnMovIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MovID;
        partial void OnMovIDChanging(Nullable<global::System.Int32> value);
        partial void OnMovIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Msgcontent
        {
            get
            {
                return _Msgcontent;
            }
            set
            {
                OnMsgcontentChanging(value);
                ReportPropertyChanging("Msgcontent");
                _Msgcontent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Msgcontent");
                OnMsgcontentChanged();
            }
        }
        private global::System.String _Msgcontent;
        partial void OnMsgcontentChanging(global::System.String value);
        partial void OnMsgcontentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MsgTitle
        {
            get
            {
                return _MsgTitle;
            }
            set
            {
                OnMsgTitleChanging(value);
                ReportPropertyChanging("MsgTitle");
                _MsgTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MsgTitle");
                OnMsgTitleChanged();
            }
        }
        private global::System.String _MsgTitle;
        partial void OnMsgTitleChanging(global::System.String value);
        partial void OnMsgTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddDate
        {
            get
            {
                return _AddDate;
            }
            set
            {
                OnAddDateChanging(value);
                ReportPropertyChanging("AddDate");
                _AddDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddDate");
                OnAddDateChanged();
            }
        }
        private global::System.DateTime _AddDate;
        partial void OnAddDateChanging(global::System.DateTime value);
        partial void OnAddDateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies_DataModel", "FK__Messages__MovID__060DEAE8", "Movies")]
        public Movies Movies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movies>("Movies_DataModel.FK__Messages__MovID__060DEAE8", "Movies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movies>("Movies_DataModel.FK__Messages__MovID__060DEAE8", "Movies").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movies> MoviesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movies>("Movies_DataModel.FK__Messages__MovID__060DEAE8", "Movies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movies>("Movies_DataModel.FK__Messages__MovID__060DEAE8", "Movies", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies_DataModel", "FK__Messages__UserID__07020F21", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Movies_DataModel.FK__Messages__UserID__07020F21", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Movies_DataModel.FK__Messages__UserID__07020F21", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Movies_DataModel.FK__Messages__UserID__07020F21", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("Movies_DataModel.FK__Messages__UserID__07020F21", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Movies_DataModel", Name="Movies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Movies : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Movies 对象。
        /// </summary>
        /// <param name="movID">MovID 属性的初始值。</param>
        /// <param name="movName">MovName 属性的初始值。</param>
        /// <param name="movDec">MovDec 属性的初始值。</param>
        /// <param name="movTime">MovTime 属性的初始值。</param>
        /// <param name="hitNum">HitNum 属性的初始值。</param>
        /// <param name="addDate">AddDate 属性的初始值。</param>
        /// <param name="movCountry">MovCountry 属性的初始值。</param>
        /// <param name="moveImage">MoveImage 属性的初始值。</param>
        /// <param name="mov">Mov 属性的初始值。</param>
        public static Movies CreateMovies(global::System.Int32 movID, global::System.String movName, global::System.String movDec, global::System.Int32 movTime, global::System.Int32 hitNum, global::System.String addDate, global::System.String movCountry, global::System.String moveImage, global::System.String mov)
        {
            Movies movies = new Movies();
            movies.MovID = movID;
            movies.MovName = movName;
            movies.MovDec = movDec;
            movies.MovTime = movTime;
            movies.HitNum = hitNum;
            movies.AddDate = addDate;
            movies.MovCountry = movCountry;
            movies.MoveImage = moveImage;
            movies.Mov = mov;
            return movies;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovID
        {
            get
            {
                return _MovID;
            }
            set
            {
                if (_MovID != value)
                {
                    OnMovIDChanging(value);
                    ReportPropertyChanging("MovID");
                    _MovID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MovID");
                    OnMovIDChanged();
                }
            }
        }
        private global::System.Int32 _MovID;
        partial void OnMovIDChanging(global::System.Int32 value);
        partial void OnMovIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CatID
        {
            get
            {
                return _CatID;
            }
            set
            {
                OnCatIDChanging(value);
                ReportPropertyChanging("CatID");
                _CatID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CatID");
                OnCatIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CatID;
        partial void OnCatIDChanging(Nullable<global::System.Int32> value);
        partial void OnCatIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovName
        {
            get
            {
                return _MovName;
            }
            set
            {
                OnMovNameChanging(value);
                ReportPropertyChanging("MovName");
                _MovName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MovName");
                OnMovNameChanged();
            }
        }
        private global::System.String _MovName;
        partial void OnMovNameChanging(global::System.String value);
        partial void OnMovNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Movdirector
        {
            get
            {
                return _Movdirector;
            }
            set
            {
                OnMovdirectorChanging(value);
                ReportPropertyChanging("Movdirector");
                _Movdirector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Movdirector");
                OnMovdirectorChanged();
            }
        }
        private global::System.String _Movdirector;
        partial void OnMovdirectorChanging(global::System.String value);
        partial void OnMovdirectorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MovActor
        {
            get
            {
                return _MovActor;
            }
            set
            {
                OnMovActorChanging(value);
                ReportPropertyChanging("MovActor");
                _MovActor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MovActor");
                OnMovActorChanged();
            }
        }
        private global::System.String _MovActor;
        partial void OnMovActorChanging(global::System.String value);
        partial void OnMovActorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovDec
        {
            get
            {
                return _MovDec;
            }
            set
            {
                OnMovDecChanging(value);
                ReportPropertyChanging("MovDec");
                _MovDec = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MovDec");
                OnMovDecChanged();
            }
        }
        private global::System.String _MovDec;
        partial void OnMovDecChanging(global::System.String value);
        partial void OnMovDecChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MovStartData
        {
            get
            {
                return _MovStartData;
            }
            set
            {
                OnMovStartDataChanging(value);
                ReportPropertyChanging("MovStartData");
                _MovStartData = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovStartData");
                OnMovStartDataChanged();
            }
        }
        private Nullable<global::System.DateTime> _MovStartData;
        partial void OnMovStartDataChanging(Nullable<global::System.DateTime> value);
        partial void OnMovStartDataChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovTime
        {
            get
            {
                return _MovTime;
            }
            set
            {
                OnMovTimeChanging(value);
                ReportPropertyChanging("MovTime");
                _MovTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovTime");
                OnMovTimeChanged();
            }
        }
        private global::System.Int32 _MovTime;
        partial void OnMovTimeChanging(global::System.Int32 value);
        partial void OnMovTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HitNum
        {
            get
            {
                return _HitNum;
            }
            set
            {
                OnHitNumChanging(value);
                ReportPropertyChanging("HitNum");
                _HitNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HitNum");
                OnHitNumChanged();
            }
        }
        private global::System.Int32 _HitNum;
        partial void OnHitNumChanging(global::System.Int32 value);
        partial void OnHitNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddDate
        {
            get
            {
                return _AddDate;
            }
            set
            {
                OnAddDateChanging(value);
                ReportPropertyChanging("AddDate");
                _AddDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddDate");
                OnAddDateChanged();
            }
        }
        private global::System.String _AddDate;
        partial void OnAddDateChanging(global::System.String value);
        partial void OnAddDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovCountry
        {
            get
            {
                return _MovCountry;
            }
            set
            {
                OnMovCountryChanging(value);
                ReportPropertyChanging("MovCountry");
                _MovCountry = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MovCountry");
                OnMovCountryChanged();
            }
        }
        private global::System.String _MovCountry;
        partial void OnMovCountryChanging(global::System.String value);
        partial void OnMovCountryChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MovLanguage
        {
            get
            {
                return _MovLanguage;
            }
            set
            {
                OnMovLanguageChanging(value);
                ReportPropertyChanging("MovLanguage");
                _MovLanguage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MovLanguage");
                OnMovLanguageChanged();
            }
        }
        private global::System.String _MovLanguage;
        partial void OnMovLanguageChanging(global::System.String value);
        partial void OnMovLanguageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MoveImage
        {
            get
            {
                return _MoveImage;
            }
            set
            {
                OnMoveImageChanging(value);
                ReportPropertyChanging("MoveImage");
                _MoveImage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MoveImage");
                OnMoveImageChanged();
            }
        }
        private global::System.String _MoveImage;
        partial void OnMoveImageChanging(global::System.String value);
        partial void OnMoveImageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mov
        {
            get
            {
                return _Mov;
            }
            set
            {
                OnMovChanging(value);
                ReportPropertyChanging("Mov");
                _Mov = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mov");
                OnMovChanged();
            }
        }
        private global::System.String _Mov;
        partial void OnMovChanging(global::System.String value);
        partial void OnMovChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies_DataModel", "FK__Messages__MovID__060DEAE8", "Messages")]
        public EntityCollection<Messages> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Messages>("Movies_DataModel.FK__Messages__MovID__060DEAE8", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Messages>("Movies_DataModel.FK__Messages__MovID__060DEAE8", "Messages", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Movies_DataModel", Name="Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Roles : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Roles 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="roleName">RoleName 属性的初始值。</param>
        public static Roles CreateRoles(global::System.Int32 roleID, global::System.String roleName)
        {
            Roles roles = new Roles();
            roles.RoleID = roleID;
            roles.RoleName = roleName;
            return roles;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies_DataModel", "FK__Users__RoleID__79A81403", "Users")]
        public EntityCollection<Users> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Users>("Movies_DataModel.FK__Users__RoleID__79A81403", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Users>("Movies_DataModel.FK__Users__RoleID__79A81403", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Movies_DataModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Users 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="sex">Sex 属性的初始值。</param>
        /// <param name="pwd">Pwd 属性的初始值。</param>
        public static Users CreateUsers(global::System.Int32 userID, global::System.String sex, global::System.String pwd)
        {
            Users users = new Users();
            users.UserID = userID;
            users.Sex = sex;
            users.Pwd = pwd;
            return users;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int16> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int16> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pwd
        {
            get
            {
                return _Pwd;
            }
            set
            {
                OnPwdChanging(value);
                ReportPropertyChanging("Pwd");
                _Pwd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pwd");
                OnPwdChanged();
            }
        }
        private global::System.String _Pwd;
        partial void OnPwdChanging(global::System.String value);
        partial void OnPwdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies_DataModel", "FK__Messages__UserID__07020F21", "Messages")]
        public EntityCollection<Messages> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Messages>("Movies_DataModel.FK__Messages__UserID__07020F21", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Messages>("Movies_DataModel.FK__Messages__UserID__07020F21", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies_DataModel", "FK__Users__RoleID__79A81403", "Roles")]
        public Roles Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("Movies_DataModel.FK__Users__RoleID__79A81403", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("Movies_DataModel.FK__Users__RoleID__79A81403", "Roles").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Roles> RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("Movies_DataModel.FK__Users__RoleID__79A81403", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Roles>("Movies_DataModel.FK__Users__RoleID__79A81403", "Roles", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
